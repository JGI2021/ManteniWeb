@using ManteniWeb.Models;
@using ManteniWeb.Controllers;
@using ManteniWeb.App_GlobalResources;
@using ManteniWeb.Code;

@model InicioRegistrosMarcadorModelo


@{
    ViewBag.Title = CampanaResources.rg_titResultadosRegistros;
}


<link href="~/Content/bootstrap-select.min.css" rel="stylesheet" />
<link href='~/css/footable.core.css' rel='stylesheet' type='text/css' />
<link href="~/css/footableManteniWeb.metro.css" rel="stylesheet" />
<link href="~/css/jquery-ui.css" rel="stylesheet" />

<style>
    .mycontainer {
        padding: 10px;
        white-space: nowrap;
        overflow-x: auto;
        overflow-y: auto;
    }

    .separaTablas {
        display: inline-block;
        margin-right: 10px;
    }

    .NoMostrar {
        display: none;
    }



    body {
        font-family: 'Roboto',sans-serif !important;
    }

    .CampanaInactiva {
        color: darkred;
    }

    .ListaInactiva {
        color: darkred;
    }
</style>
<link href="~/footable/css/footable.core.bootstrap.min.css" rel="stylesheet" />

<script src="~/Scripts/jquery-ui-1.13.3.min.js" type="text/javascript"></script>

<div class="jumbotron" style="padding:0px;margin-bottom:0px">
    <div class='container'>
        <h2 class='tituloGrande visible-lg visible-md' style="font-family: inherit;">
            <i class='fa fa-th' aria-hidden="true"></i>
            <span style='margin-left: 1em;'>@ViewBag.Title</span>
        </h2>
    </div>
</div>



@using (Html.BeginForm())
{

    @Html.AntiForgeryToken();
    @Html.HiddenFor(model => model.Idcampanaseleccionada)
    @Html.HiddenFor(model => model.Campananame)
    @Html.HiddenFor(model => model.IdListaSeleccionada)
    @Html.HiddenFor(model => model.ListaName)

    <div class='row'>
        @* Lateral izquierdo. Menú *@
        <div class="col-lg-3 col-md-3 col-sm-3" style='text-align:left;' collapse width show" id="sidebar">
            <div class='row rowSeparacion25'>
                <div class="col-lg-8 col-md-8 col-sm-8">
                    <div class="visible-lg visible-md ">
                        <ul id="VerticalPill_opciones" class="nav nav-pills nav-stacked VerticalPillMenuRegistro">
                            <li></li>
                            <li class="RowAccionesSiempreVisibles">
                                <a href="#" role="button" id="OptionButtonVP_15" class="" onclick="RetrocederPaginaMVC();">
                                    <div class="row">
                                        <div class="col-lg-2 col-sm-1">
                                            <span class="fa fa-arrow-left   visible-lg  visible-md  visible-xs " aria-hidden="true"></span>
                                        </div>
                                        <div class="col-lg-10 col-sm-11">@ComunResources.btn_volver</div>
                                    </div>
                                </a>
                            </li>
                            <li></li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class='row rowSeparacion25'>
                @* Selector de campaña *@
                <div class="col-lg-1 col-md-1"></div>
                <div class="col-lg-9 col-md-9">
                    <label for="SelectCampanas" id="LabelSelectCampanas">@CampanaResources.cmp_campana</label>
                    <select id="SelectCampanas" name="SelectCampanas" class='form-control selectpicker' title="@CampanaResources.cmp_seleccionarCampana ..." data-val="true"
                            data-val-requiered="You must select a campaign" onchange="SelectCampanasChange();">
                        @{
                            CampanasRegistros campana = null;
                            int totactivos = 0;
                            string selected = "";
                            string display = "display: block;";
                        }

                        @if (ViewBag.campanas.Count > 0)
                        {
                            for (int j = 0; j < ViewBag.campanas.Count; j++)
                            {
                                campana = ViewBag.campanas[j];
                                if (campana.activa == "1")
                                {
                                    totactivos++;
                                }
                            }

                            <optgroup label=' Activas'>
                                @for (int i = 0; i < ViewBag.campanas.Count; i++)
                                {
                                    campana = ViewBag.campanas[i];
                                    if (campana.activa == "1")
                                    {
                                        selected = "";
                                        if (campana.idcampana == Model.Idcampanaseleccionada)
                                        {
                                            selected = "selected='selected'";
                                        }

                                        if (WebConfigParams.MostrarDescripcion)
                                        {
                                            <option value='@campana.idcampana' title='@campana.descripcion' @selected> @campana.descripcion </option>
                                        }
                                        else
                                        {
                                            <option value='@campana.idcampana' title='@campana.nombre' @selected> @campana.nombre </option>
                                        }
                                    }
                                }
                            </optgroup>

                            <optgroup label=' Inactivas' class='CampanaInactiva'>
                                @for (int i = totactivos; i < ViewBag.campanas.Count; i++)
                                {
                                    campana = ViewBag.campanas[i];
                                    if (campana.activa == "0")
                                    {
                                        selected = "";
                                        if (campana.idcampana == Model.Idcampanaseleccionada)
                                        {
                                            selected = "selected";
                                        }

                                        if (WebConfigParams.MostrarDescripcion)
                                        {
                                            <option value='@campana.idcampana' class='CampanaInactiva' title='@campana.descripcion' @selected> @campana.descripcion </option>
                                        }
                                        else
                                        {
                                            <option value='@campana.idcampana' class='CampanaInactiva' title='@campana.nombre' @selected> @campana.nombre </option>
                                        }
                                    }
                                }

                            </optgroup>
                        }
                    </select>
                    <span id="spanSelectCampanas" class="field-validation-valid text-danger" data-valmsg-for="SelectCampanas" data-valmsg-replace="true" style="margin-top:15px;"></span>
                </div>
                <div class="col-lg-2 col-md-2"></div>
            </div>

            @*   COMBO LISTAS  *@
            <div class='row rowSeparacion15'>
                <div class="col-lg-1 col-md-1"></div>
                <div class="col-lg-9 col-md-9">
                    <label for="ListasCampanas" id="labelListasCampanas">@CampanaResources.ls_lista</label>
                    <select id="ListasCampanas" name="ListasCampanas" disabled class='form-control selectpicker' title="@CampanaResources.cmp_seleccionarLista ..."
                            data-val="true" data-val-requiered="You must select a list" onchange="SelectListChange();">

                        <optgroup label=' Activas'>
                            @foreach (RegistrosMarcadorController.DatosComboListas lista in ViewBag.listas)
                            {
                                if (lista.Activa)
                                {

                                    if (lista.IdLista == Model.IdListaSeleccionada)
                                    {
                                        <option value="@lista.IdLista" title="@lista.Alias" selected="selected"> @lista.Alias </option>
                                    }
                                    else
                                    {
                                        <option value="@lista.IdLista" title="@lista.Alias"> @lista.Alias </option>
                                    }
                                }
                            }
                        </optgroup>



                        <optgroup label=' Inactivas' class="CampanaInactiva">
                            @foreach (RegistrosMarcadorController.DatosComboListas lista in ViewBag.listas)
                            {
                                if (!lista.Activa)
                                {
                                    if (lista.IdLista == Model.IdListaSeleccionada)
                                    {
                                        <option value="@lista.IdLista" title="@lista.Alias" selected="selected" class="CampanaInactiva"> @lista.Alias </option>
                                    }
                                    else
                                    {
                                        <option value="@lista.IdLista" title="@lista.Alias" class="CampanaInactiva"> @lista.Alias </option>
                                    }
                                }
                            }
                        </optgroup>

                    </select>
                    <span id="spanSelectListas" class="field-validation-valid text-danger" data-valmsg-for="ListasCampanas" data-valmsg-replace="true"></span>
                </div>
            </div>

            @*  Campo fecha desde  *@
            <div class='row rowSeparacion15'>
                <div class="col-lg-1 col-md-1"></div>
                <div class="col-lg-6 col-md-6">
                    @if (!Model.MostrarFechaFin)
                    {
                        @Html.LabelFor(model => model.FechaInicio, CampanaResources.cmp_fecha, new { id = "LabelFechaInicio" })
                    }
                    else
                    {
                        @Html.LabelFor(model => model.FechaInicio)
                    }

                    <!--label for="FechaDesde" id="labelFechaDesde">Fecha desde</label-->
                    @Html.EditorFor(model => model.FechaInicio, new { htmlAttributes = new { @class = "form-control input-sm", onchange = "FechaInicioModificada();" } })
                    @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-5 col-md-5"></div>
            </div>

            @* Campo fecha hasta *@
            <div class='row rowSeparacion15'>
                <div class="col-lg-1 col-md-1"></div>
                <div class="col-lg-6 col-md-6">
                    @Html.CheckBoxFor(model => model.MostrarFechaFin, new { onchange = "MuestraInputFechaFin(this)" })


                    @Html.LabelFor(model => model.FechaFin)
                    @if (!Model.MostrarFechaFin)
                    {
                        @Html.EditorFor(model => model.FechaFin, new { htmlAttributes = new { @class = "form-control input-sm NoMostrar" } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.FechaFin, new { htmlAttributes = new { @class = "form-control input-sm", onchange = "FechaFinModificada();" } })
                    }

                    @*     @Html.ValidationMessageFor(model => model.FechaFin, "", new { @class = "text-danger" }) *@
                </div>
                <div class="col-lg-5 col-md-5"></div>
            </div>

            @* Check para indicar si se usa rango horario o no*@
            <div class='row rowSeparacion15'>
                <div class="col-lg-1 col-md-1"></div>
                <div class="col-lg-7 col-md-7">
                    @Html.CheckBoxFor(model => model.UsarRangoHorario, new { onchange = "MostrarHoraDesdeHasta(this)" })
                    @Html.LabelFor(model => model.UsarRangoHorario)
                </div>
                <div class="col-lg-5 col-md-5"></div>
            </div>

            @if (!Model.UsarRangoHorario)
            {
                display = "display:none;";
                }
            @* campo Hora desde *@
            <div class='row rowSeparacion5' id="CamposHora" style="@display ">
                <div class="col-lg-1 col-md-1"></div>
                <div class="col-lg-1 col-md-1">
                    @Html.Label("De", new { @class = "FuenteGrosorNormal" })
                </div>
                <div class="col-lg-3 col-md-3">
                    @Html.EditorFor(model => model.HoranInicio, new { htmlAttributes = new { @class = "form-control input-sm" } })
                    @Html.ValidationMessageFor(model => model.HoranInicio, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-1 col-md-1">
                    @Html.Label("a", new { @class = "FuenteGrosorNormal" })
                </div>
                <div class="col-lg-3 col-md-3">
                    @Html.EditorFor(model => model.HoraFin, new { htmlAttributes = new { @class = "form-control input-sm" } })
                    @Html.ValidationMessageFor(model => model.HoraFin, "", new { @class = "text-danger" })
                </div>

                <div class="col-lg-3 col-md-3">
                    @Html.Label("horas", new { @class = "FuenteGrosorNormal" })
                </div>
            </div>

            @* Campo check mostrar todos los resultados *@
            <div class='row rowSeparacion10'>
                <div class="col-lg-1 col-md-1"></div>
                <div class="col-lg-10 col-md-10 checkbox">
                    <label>
                        @Html.CheckBoxFor(model => model.MostrarTodosLosResultados)
                        <b>Resultados</b>
                    </label>
                </div>
                <div class="col-lg-1 col-md-1"></div>
            </div>

            @{
                string mostraragrupardias = "display:block";
                if (!Model.MostrarFechaFin)
                {
                    mostraragrupardias = "display:none;";
                }
            }
            @* Campo check agrupar en uno todos los días *@
            <div class='row' id="row_agruparDias" style="@mostraragrupardias">
                <div class="col-lg-1 col-md-1"></div>
                <div class="col-lg-10 col-md-10 checkbox">
                    <label>
                        @Html.CheckBoxFor(model => model.AgruparDias)
                        <b>Agruprar días</b>
                    </label>
                </div>
                <div class="col-lg-1 col-md-1"></div>
            </div>

            <div class='row rowSeparacion15'>
                <div class="col-lg-1 col-md-1"></div>
                <div class="form-group">
                    <div class='col-lg-10 col-md-10' style='text-align:left'>
                        <button type='button' style='padding-top:15px;' class='btn btn-default botonFicha' title='Buscar' onclick="BuscarRegistros();"> <span class='fa fa-search' /> @CampanaResources.bs_buscar</button>
                        @if (ViewBag.ResultadosLlamadas.Count == 0)
                        {
                            <button type='button' style='padding-top:15px;visibility:hidden;' class='btn btn-default botonFicha' title='@CampanaResources.cmp_exportarCSV' id="BotonExportar" onclick="ExportarDatos();">
                                an lass = 'fa fa-file-text-o' /> @CampanaResources.cmp_exportarCSV
                            </button>
                        }
                        else
                        {
                            <button type='button' style='padding-top:15px;' class='btn btn-default botonFicha' title='@CampanaResources.cmp_exportarCSV' id="BotonExportar" onclick="ExportarDatos();">
                                <span class='fa a-le-ext-o' /> @CampanaResources.cmp_exportarCSV
                            </button>
                        }

                    </div>
                </div>
                <div class="col-lg-1 col-md-1"></div>
            </div>

            <div class='row rowSeparacion15' id="BotonesLlamadas" style="display:none;">
                <div class="col-lg-1 col-md-1"></div>
                <div class="form-group">
                    <div class='col-lg-10 col-md-10' style='text-align:left'>
                        <button type='button' style='padding-top:15px;' class='btn btn-default botonFicha' title='@CampanaResources.rg_verLlamadas' onclick="CargaDialogo();"> <span class='fa fa-eye' /> Ver llamadas</button>
                        <button type='button' style='padding-top:15px;' class='btn btn-default botonFicha' title='@CampanaResources.rg_exportLlamdas' onclick="ExportarDatosLlamadas();">
                            <span class='fa fa-file-text-o' /> @CampanaResources.rg_exportLlamdas
                        </button>
                    </div>
                </div>
            </div>
        </div>

        @* ****************************************************************
            **  Parte derecha del formulario donde se muestran las tablas **
            **************************************************************** *@
        <div class="col-lg-9 col-md-9">
            <div style='padding:15px;'>
                @{
                    var fechas = new List<DateTime>();

                    // Obtengo las distintas fechas de las llamadas
                    foreach (RegistrosRepogramacion reg in ViewBag.ResultadosLlamadas)
                    {
                        if (!fechas.Contains(reg.Fecha))
                        {
                            fechas.Add(reg.Fecha);
                        }
                    }

                    string tamanotabla = "width:500px;table-layout:auto;";
                    if (Model.AgruparDias || fechas.Count == 1)
                    {
                        tamanotabla = "width:650px;table-layout:auto;";
                    }
                }

                @foreach (DateTime fecha in fechas)
                {
                    <div class="separaTablas">
                        <table class="footable table-striped table-bordered" data-sorting='true' style="@tamanotabla">
                            <thead>
                                @if (Model.AgruparDias)
                                {
                                    <tr>
                                        <th colspan="3" style="text-align:left;background-color:#f5f5f5;">
                                            @if (Model.Campananame != "")
                                            {
                                                if (ViewBag.listas.Count > 1 && Model.IdListaSeleccionada != "-1")
                                                {
                                                    <span style="color:darkgreen;font-weight:600;">
                                                        @Model.Campananame &nbsp; &nbsp; (@Model.ListaName) &nbsp; &nbsp; @Model.FechaInicio - @Model.FechaFin
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span style="color:darkgreen;font-weight:600;">
                                                        @Model.Campananame &nbsp; &nbsp; @Model.FechaInicio - @Model.FechaFin
                                                    </span>

                                                }
                                            }
                                            else
                                            {
                                                <span style="color:darkred">

                                                </span>
                                            }
                                        </th>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <th colspan="3" style="text-align:left;background-color:#f5f5f5;">
                                            @if (ViewBag.listas.Count > 1 && Model.IdListaSeleccionada != "-1")
                                            {
                                                <span style="color:darkgreen;font-weight:600;"> @Model.Campananame &nbsp;&nbsp; (@Model.ListaName) &nbsp; &nbsp; @fecha.ToString(WebConfigParams.FormatDate) </span>
                                            }
                                            else
                                            {
                                                <span style="color:darkgreen;font-weight:600;">
                                                    <span style="color:darkgreen;font-weight:600;"> @Model.Campananame &nbsp;&nbsp;  @fecha.ToString(WebConfigParams.FormatDateTime) </span>
                                                </span>

                                            }
                                        </th>
                                    </tr>
                                }
                                <tr>
                                    <th style="padding-left:5px;">
                                        Id
                                    </th>
                                    @if (Model.AgruparDias)  // De momento los resultados solo para la agrupación
                                    {
                                        <th style="padding-left:5px;"> @CampanaResources.cmp_resultado <input type="checkbox" style="float:right;" id="CheckTodos_@fecha.ToString("yyyyMMdd")" onclick="MarcarDesmarcarTodos('@fecha.ToString("yyyyMMdd")');" /></th>
                                    }
                                    else
                                    {
                                <th style="padding-left:5px;">
                                    @CampanaResources.cmp_resultado
                                </th>
                                    }
                                    <th style="padding-left:5px;">
                                        @CampanaResources.cmp_total
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (RegistrosRepogramacion reprog in ViewBag.ResultadosLlamadas)
                                {
                                    if (reprog.Fecha == fecha)
                                    {
                                        if (!Model.MostrarTodosLosResultados && !string.IsNullOrEmpty(reprog.IdGrupo))
                                        {
                                            continue;
                                        }
                                        <tr>
                                            <td>@reprog.Codigo</td>
                                            @if (Model.AgruparDias)
                                            {
                                                <td>
                                                    @reprog.NombreResultado <input type="checkbox" style="float:right;font-weight:600" id="chk_@fecha.ToString("yyyyMMdd")_@reprog.Codigo"
                                                                                   name="chk_@fecha.ToString("yyyyMMdd")_@reprog.Codigo" onclick="MarcarDesmarcar('@reprog.Codigo','@fecha.ToString("yyyyMMdd")');" />

                                                </td>
                                            }
                                            else
                                            {
                                                <td> @reprog.NombreResultado</td>
                                            }
                                            @if (Model.MostrarTodosLosResultados)
                                            {
                                                <td id="col_@reprog.Codigo" style="text-align:right"> @reprog.TotalRegistros </td>
                                            }
                                            else
                                            {
                                                <td id="col_@reprog.Codigo" style="text-align:right">@reprog.TotalGrupo</td>
                                            }
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    if (!Model.AgruparDias)
                    {
                        <input type="hidden" id="hidd_@fecha.ToString("yyyyMMdd")" value="" />
                    }
                }

                @{
                    string resultados = "";
                    foreach (RegistrosRepogramacion reprog2 in ViewBag.ResultadosLlamadas)
                    {
                        if (resultados == "")
                        {
                            resultados = reprog2.Codigo.ToString();
                        }
                        else
                        {
                            resultados += "," + reprog2.Codigo.ToString();
                        }
                    }
                }

                <input type="hidden" id="hidd_Resultados" value="@resultados" />
                @if (Model.AgruparDias)
                {
                    <input type="hidden" id="hidd_19000101" value="" />
                }
            </div>
        </div>
    </div>

}




<div class='modal fade' id='ModalResultadosLlamadas' tabindex='111' role='dialog' aria-labelledby='myModalLabel' aria-hidden='true' style='display:none'>
    <div class='modal-dialog' id='modalDialog'>
        <div class='modal-content' style='left:-350px;top:50px;width:1415px;height:680px;overflow-y:scroll;'>
            <div class='modal-header'>
                <button type='button' class='close' data-dismiss='modal'><span aria-hidden='true'>&times;</span><span class='sr-only'>Close</span></button>
                <h4 class='modal-title' id='myModalTitle' style='font-weight:600;'><span class='fa " + EstaticosImagenes.ImagenConceptoCampanas + "'></span> Edición registro </h4>
            </div>
            <div class='modal-body' id='contentModalBody'>
                <div>
                    <div id='spinner'>
                        <div>
                            <img src='~/images/cargandoPaginaWeb.gif' />
                        </div>
                    </div>
                    <iframe id='IdIframe' src='' style='width:100%;height:610px;border:none;' onload="$('#spinner').css('display','none');"></iframe>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $('#ModalResultadosLlamadas').modal({
        keyboard: false,
        show: false
    });

    $('#modalDialog').draggable({
        handle: '.modal-header'
    });
</script>





@*  VENTANA MODAL PARA LOS ERRORES *@
<div class="modal fade" id="ModalError" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="ModalErrorTitulo" style="color:red;"><strong>Atención</strong></h4>
            </div>
            <div class="modal-body" id="ModalErrorBody">
                <p>Do you want to save changes you made to document before closing?</p>
                <p class="text-warning"><small>If you don't save, your changes will be lost.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    $('.footable').footable({ 'empty': '@ComunResources.sinRegistros' });
</script>


@section scripts{

    <script src="~/footable/js/footable.core.min.js"></script>
    <script src="~/Scripts/bootstrap-select.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/i18next-http-backend@1.3.1/i18nextHttpBackend.min.js"></script>
    <script src="~/js/i18next/i18next.min.js" type="text/javascript"></script>
    <script src="~/js/RegistrosMarcador.js"></script>

    <script>

        document.addEventListener("DOMContentLoaded", function () {

            var language = '@WebConfigParams.AppLanguage';

            i18next.use(i18nextHttpBackend).init({

                lng: language,
                debug: true,
                fallbackLng: "en",
                backend: {
                    loadPath: '../locales/{{lng}}.json'
                }
            });
        });

        /// ***************************************************************************************
        /// *** Exporta los datos que muestra el formulacio sobre un fichero CSV.
        /// ***************************************************************************************
        function ExportarDatos() {
            if (!ValidaDatosEntrada())
                return;

            var model = @Html.Raw(Json.Encode(Model));
            var myurl = getRutaAbsoluta();

            $.ajax({
                type: "POST",
                url: myurl + "/RegistrosMarcador/ExportToExcel",
                data: JSON.stringify({ registro: model }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
            }).done(function (data) {
                //get the file name for download
                if (data.fileName != "") {
                    //descarga del fichero de la ruta y su posterior eliminación de la ruta una vez descargado
                    window.location.href = "@Url.RouteUrl(new  { Controller = "RegistrosMarcador", Action = "Download"})/?file=" + data.fileName;
                }
                else {
                    alert(data.errorMessage);
                }
            });
        }

        /// ***************************************************************************************
        /// *** Exporta los datos que muestra el formulacio sobre un fichero CSV.
        /// ***************************************************************************************
        function ExportarDatosLlamadas() {
            var Idcampanaseleccionada = $('#Idcampanaseleccionada').val();
            var url = "/RegistrosMarcador/ResultadosLlamadas"; //
            // Obtenemos el identificador de la campaña seleccionada
            var Idcampanaseleccionada = $('#Idcampanaseleccionada').val();
            var idlistaseleccionada = $('#ListasCampanas').val();
            // Obtenemos las fechas desde y hasta
            var fechadesde = $('#FechaInicio').val();
            var fechahasta = $('#FechaFin').val();
            var fechas = fechadesde + "@@" + fechahasta;
            // Obtengo el valor para saber si son grupos de resultados o solo resultados lo que se pasa
            var sonGrupos = true;
            if ($('#MostrarTodosLosResultados').prop('checked')) {
                sonGrupos = false;
            }
            else {
                sonGrupos = true;
            }

            // De momento solo obtengo los datos de cuando están agrupados los días
            var resultados = $('#hidd_19000101').val();
            var params = { "idcampana": Idcampanaseleccionada, "fechas": fechas, "resultados": resultados, "songrupos": sonGrupos, "idlista": idlistaseleccionada }

            //    var querystring = $.param(data);
            //   AvanzarPagina("/RegistrosMarcador/Inicio/" + Idcampanaseleccionada, url + "?" + querystring);
            $.ajax({
                type: "POST",
                url: getRutaAbsoluta() + "/RegistrosMarcador/ExportToExcelLlamadas",
                data: JSON.stringify(params),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
            }).done(function (data) {
                //get the file name for download
                if (data.fileName != "") {
                    //descarga del fichero de la ruta y su posterior eliminación de la ruta una vez descargado
                    window.location.href = "@Url.RouteUrl(new  { Controller = "RegistrosMarcador", Action = "Download"})/?file=" + data.fileName;
                }
                else {
                    alert(data.errorMessage);
                }
            });

        }


    </script>
}

